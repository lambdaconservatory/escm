<?xml version="1.0"?><!-- -*- mode:pxml -*- -->
<!-- $Id$ -->
<!DOCTYPE html
     PUBLIC  "-//W3C//DTD XHTML 1.1//EN"
     "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<?scm
  (load (string-append *builddir* "/doc/config.scm"))
  (load (string-append *srcdir* "/doc/helper.scm"))
?>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
   <title>Command Line Options</title>
    <link href="aescm.css" type="text/css" rel="stylesheet" />
    <?xml-stylesheet type="text/css" href="aescm.css"?>
  </head>
  <body>
   <h1>Command Line Options</h1>

    <p>Here is a list of the interpreters I have checked.
Tests were done against my Linux box (RedHat Linux 7.3) with gcc (2.96)
or FreeBSD notebook (5.1) with gcc (3.2.2).
Of course, this list is not exhaustive and
the results may be environment dependent.
Please inform <?scm:d (link-mail PACKAGE_BUGREPORT)?>
if you have any additions, corrections or advice.</p>

    <ul>
      <li><a href="#scheme">Scheme</a></li>
      <li><a href="#cl">Common Lisp</a></li>
    </ul>

    <h3 id="scheme">Scheme</h3>
    <dl>
      <dt>Bigloo 2.5c</dt>
      <dd><blockquote>
	  <pre><code>bigloo -i /dev/stdin</code></pre>
	</blockquote></dd>
      <dt>Gambit-C 3.0</dt>
      <dd><blockquote>
	  <pre><code>gsi -</code></pre>
	</blockquote></dd>
      <dt>Gauche 0.7.4.1</dt>
      <dd><blockquote>
	  <pre><code>gosh -b</code></pre>
	</blockquote>
      <p>It works even without <code>-b</code>.
This interpreter is our default backend.</p></dd>
      <dt>Guile 1.6.4</dt>
      <dd><blockquote>
	  <pre><code>guile -s /dev/stdin</code></pre>
	</blockquote>
        <p><em>configure script</em> will automatically add these options.
This interpreter is used as default if <em>Gauche</em> is not found.</p>
      </dd>
      <dt>Ksi 3.4.1</dt>
      <dd><blockquote>
	  <pre><code>ksi</code></pre>
	</blockquote></dd>
      <dt>KSM-Scheme 0.3.2</dt>
      <dd><blockquote>
	  <pre>ksm /dev/stdin<code></code></pre>
	</blockquote></dd>
      <dt>Rep 0.15.1</dt>
      <dd><blockquote>
	  <pre>rep -s /dev/stdin<code></code></pre>
	</blockquote></dd>
      <dt>Scm 5d9</dt>
      <dd><blockquote>
	  <pre>scm -q</pre>
	</blockquote>
        <p><em>scm</em> does not work with the default configuration
file for Scheme.  You should use <em>scm-scm</em> instead.</p>
</dd>
      <dt>Scsh 0.6.2</dt>
      <dd><blockquote>
	  <pre><code>scsh -s /dev/stdin</code></pre>
	</blockquote></dd>
      <dt>Sizzle 0.0.31</dt>
      <dd><blockquote>
	  <pre><code>sizzle -s /dev/stdin</code></pre>
	</blockquote></dd>
      <dt>Stklos 0.55</dt>
      <dd><blockquote>
	  <pre><code>stklos</code></pre>
	</blockquote>
<p>Previous versions may require <em>-q</em> option
to be used in a CGI.</p>
</dd>
      <dt>TinyScheme 1.33</dt>
      <dd><blockquote>
	  <pre>scheme /dev/stdin</pre>
	</blockquote>
<p>Do not use this interpreter in CGI scripts,
for it limits string length and
a query string by the POST method will abort the program.</p>
</dd>
    </dl>

    <h3 id="cl">Common Lisp</h3>
    <dl>
      <dt>CLISP</dt>
      <dd><blockquote>
	  <pre>clisp -q /dev/stdin</pre>
	</blockquote>
<p>The configuration file is <em>lisp</em>.</p>
</dd>
      <dt>CMUCL</dt>
      <dd><blockquote>
	  <pre>lisp -quiet -batch -eval '(setq *prompt* "")'</pre>
	</blockquote>
<p>The configuration file is <em>lisp-cmucl</em>.</p>
</dd>
    </dl>
<hr />
    <div>
<?scm:d (sourceforge-logo)?>
</div>
  </body>
</html>
