=begin none
<?scm (load "./helper.scm")?>
<?scm (load "./config.scm")?>
=end none

=head1 NAME

<?scm:d PACKAGE?> - embedded Scheme processor

=head1 SYNOPSIS

 <?scm:d PACKAGE?> [-EHSalsvx][-L lang][-e expr ...][-i interpreter] file ...

=head1 DESCRIPTION

This is a skelton of the man page.

=head2 OPTIONS

=over 4

=item -E

Preprocess only.

=item -H

Do not print the content header even in a CGI script.
By default, it is printed in a CGI script but not otherwise.

=item -L lang

Specify the interpreter language.
This option is disabled when only one language is incorporated.

=item -S

Do not skip the #! line.

=item -a

Use the style of the version 1.1:
<?scm:d (escape-pod "<? expr ... !>")?>

=item -e expr

Emit an expression.
The number is limited to 10.

=item -i interpreter

Specify the interpreter with options (if any).

=item -l

Print the list of the supported interpreter languages
and exit successfully.
This option is disabled when only one language is incorporated.

=item -s

Use the style of some server side scripts:
<?scm:d (escape-pod "<% expr ... %>")?>

=item -v

Print version information and exit successfully.

=item -x

Use the XML style:
<?scm:d (escape-pod "<?lang expr ... ?>")?>.
This style is our default one.

=item -?

Pirnt a short help message and exit successfully.

=back

=head2 OPTIONS IN A SCRIPT

Using options in the #! line of a script is esoteric.

Suppose you want to use B<stklos> as backend. You will invoke <?scm:d PACKAGE?>
in a command line as:

  <?scm:d PACKAGE?> -H -i "stklos -q"

You must, however, write in the #! line:

  #!/usr/local/bin/<?scm:d PACKAGE?> -Histklos -q

This version has two mechanisms to facilitate the situation.
"#?" prefix introduced in the version 1.1 is not ported yet.

=head2 Metaswitch

   #!/usr/local/bin/<?scm:d PACKAGE?> \
   -H -i "stklos -q"

The current implementation is a rough-and-ready work.

=head2 Bang option

  #!/usr/local/bin/<?scm:d PACKAGE?> -! -H -i "stklos -q"

=head1 CHANGES

In this section describe major differences from the version 1.1.
With C<-Ha> options, our tool is roughly compatible with the original
except these features.

=over 4

=item *

As many files specified are processed (if without the metaswitch).

=item *

Automatically add the content header in a CGI script by default.

=item *

"#?" prefix to specify the interpreter is not ported yet.

=item *

C<<?scm:d (escape-pod "?>, !>, %>")?>> in strings are not treated as
suffix to quit a code block.

=item *

With C<-a> option, the characters just after C<<?scm:d (escape-pod "<?")?>>
are processed while in the original they are assumed to be spaces.

=back

=cut


