.\" Automatically generated by Pod::Man version 1.15
.\" Wed Dec 25 23:34:38 2002
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "AESCM 1"
.TH AESCM 1 "perl v5.6.1" "2002-12-25" ""
.UC
.SH "NAME"
aescm \- embedded Scheme processor
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& aescm [-EHSalsvx][-L lang][-e expr ...][-i interpreter] file ...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a skelton of the man page.
.Sh "\s-1OPTIONS\s0"
.IX Subsection "OPTIONS"
.Ip "\-E" 4
.IX Item "-E"
Preprocess only.
.Ip "\-H" 4
.IX Item "-H"
Do not print the content header even in a \s-1CGI\s0 script.
By default, it is printed in a \s-1CGI\s0 script but not otherwise.
.Ip "\-L lang" 4
.IX Item "-L lang"
Specify the interpreter language.
This option is disabled when only one language is incorporated.
.Ip "\-S" 4
.IX Item "-S"
Do not skip the #! line.
.Ip "\-a" 4
.IX Item "-a"
Use the style of the version 1.1:
<? expr ... !>
.Ip "\-e expr" 4
.IX Item "-e expr"
Emit an expression.
The number is limited to 10.
.Ip "\-i interpreter" 4
.IX Item "-i interpreter"
Specify the interpreter with options (if any).
.Ip "\-l" 4
.IX Item "-l"
Print the list of the supported interpreter languages
and exit successfully.
This option is disabled when only one language is incorporated.
.Ip "\-s" 4
.IX Item "-s"
Use the style of some server side scripts:
<% expr ... %>
.Ip "\-v" 4
.IX Item "-v"
Print version information and exit successfully.
.Ip "\-x" 4
.IX Item "-x"
Use the \s-1XML\s0 style:
<?lang expr ... ?>.
This style is our default one.
.Ip "\-?" 4
Pirnt a short help message and exit successfully.
.Sh "\s-1OPTIONS\s0 \s-1IN\s0 A \s-1SCRIPT\s0"
.IX Subsection "OPTIONS IN A SCRIPT"
Using options in the #! line of a script is esoteric.
.PP
Suppose you want to use \fBstklos\fR as backend. You will invoke aescm
in a command line as:
.PP
.Vb 1
\&  aescm -H -i "stklos -q"
.Ve
You must, however, write in the #! line:
.PP
.Vb 1
\&  #!/usr/local/bin/aescm -Histklos -q
.Ve
This version has two mechanisms to facilitate the situation.
\&\*(L"#?\*(R" prefix introduced in the version 1.1 is not ported yet.
.Sh "Metaswitch"
.IX Subsection "Metaswitch"
.Vb 2
\&   #!/usr/local/bin/aescm \e
\&   -H -i "stklos -q"
.Ve
The current implementation is a rough-and-ready work.
.Sh "Bang option"
.IX Subsection "Bang option"
.Vb 1
\&  #!/usr/local/bin/aescm -! -H -i "stklos -q"
.Ve
.SH "CHANGES"
.IX Header "CHANGES"
In this section describe major differences from the version 1.1.
With \f(CW\*(C`\-Ha\*(C'\fR options, our tool is roughly compatible with the original
except these features.
.Ip "\(bu" 4
As many files specified are processed (if without the metaswitch).
.Ip "\(bu" 4
Automatically add the content header in a \s-1CGI\s0 script by default.
.Ip "\(bu" 4
\&\*(L"#?\*(R" prefix to specify the interpreter is not ported yet.
.Ip "\(bu" 4
\&\f(CW\*(C`?>, !>, %>\*(C'\fR in strings are not treated as
suffix to quit a code block.
.Ip "\(bu" 4
With \f(CW\*(C`\-a\*(C'\fR option, the characters just after \f(CW\*(C`<?\*(C'\fR
are processed while in the original they are assumed to be spaces.
