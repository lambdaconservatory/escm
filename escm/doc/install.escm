<?xml version="1.0"?><!-- -*- mode:pxml -*- -->
<!-- $Id$ -->
<!DOCTYPE html
     PUBLIC  "-//W3C//DTD XHTML 1.1//EN"
     "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<?scm
  (load (string-append *builddir* "/doc/config.scm"))
  (load (string-append *srcdir* "/doc/helper.scm"))
  (define gauche
    (link-url "http://sourceforge.net/projects/gauche/"
              "Gauche"))
  (define guile
    (link-url "http://www.gnu.org/software/guile/guile.html"
               "Guile"))
  (define scm
    (link-url "http://swissnet.ai.mit.edu/~jaffer/SCM.html"
               "SCM"))
?>
<html>
  <head>
    <title>Installation</title>
  </head>
  <body>
    <h1>Installation</h1>
    <p>As this tool utilizes Autotool,
it is easy to install it
if the default scripting langauge is Scheme
and if the backend interpreter is <?scm:d gauche?> or <?scm:d guile?>.</p>
    <blockquote>
      <pre><code>
./configure
make
make install
</code></pre>
    </blockquote>
    <p>I will describe the pecular settings for this tool.
Consult the documents of Autotool
to know other settings,
for example, to change the target directory.
I added three configure options.</p>
    <ul>
      <li><em>--enable-polyglot</em></li>
      <li><em>--with-default=LANG</em></li>
      <li><em>--with-backend=INTERP</em></li>
    </ul>

    <h2>--enable-polyglot</h2>
<p>
The default configuration file is converted to a C source file
and embedded when you compile this tool.
To specify a computer language with <em>-l</em> option
and make it read its configuration file,
add <em>--enable-polyglot</em> option.
To change the default language
and/or the backend interpreter,
see <a href="monoglot">below</a>.</p>

    <blockquote>
      <pre>./configure --enable-polyglot</pre>
    </blockquote>

    <p>The language configuration files are to be
installed to $(pkgdatadir)/lang,
i.e. $(prefix)/share/aescm/lang.</p>

    <h2 id="monoglot">--with-default, --with-backend</h2>

    <p>To specify the default language configuration file,
use <em>--with-default</em> option,
and to specify the default backend interpreter,
use <em>--with-backend</em> option.
Some interpreters need different configuration files
form the default ones for their language.
The configuration files are in src/lang/
The information on the interpreter is overridden
by <em>--with-backend</em> option.
</p>
    <p>See below for more information on some implementations of
Common Lisp and Scheme.</p>

    <h3>Common Lisp</h3>
    <p>The XML name space for Common Lisp is <em>lisp</em>.</p>
    <p>CMUCL requires a different configuration file,
for we have to send initialization code
and specify complicated option arguments.</p>
    <dl>
      <dt>CLISP</dt>
      <dd><blockquote>
	  <pre>./configure --with-default=lisp</pre>
	</blockquote>
</dd>
      <dt>CMUCL</dt>
      <dd><blockquote>
	  <pre>./configure --with-default=lisp-cmucl</pre>
	</blockquote>
</dd>
    </dl>

    <h3>Scheme</h3>
    <p>Scheme is our default language.
Its XML name space is <em>scm</em>.
<?scm:d scm?> requires a different configuration file,
for we have to send initialization code.</p>
    <dl>
      <dt>Gauche</dt>
      <dd><blockquote>
	  <pre>./configure</pre>
	</blockquote>
</dd>
      <dt>Guile</dt>
      <dd>
<p>If Gauche is not installed, type:</p>
<blockquote>
	  <pre>./configure</pre>
	</blockquote>
<p>If Gauche is installed, type:</p>

<blockquote>
	  <pre>./configure --with-backend=guile</pre>
	</blockquote>
</dd>
      <dt>SCM</dt>
      <dd><blockquote>
	  <pre>./configure --with-default=scm-scm</pre>
	</blockquote>
</dd>
      <dt>Other Implementations</dt>
      <dd>

<p>You have to specify the backend interpreter and its
command line arguments.
The command line arguments for some implementations are listed
in doc/<a href="interpreter.html">interpreter.html</a>.
If your favorite interpreter is not in the list,
consult doc/<a href="gimmick.html">gimmick.html</a> to find out
its argument.</p>
<p>This example is for Scsh:</p>

<blockquote>
	  <pre>./configure --with-backend="scsh -s /dev/stdin"</pre>
	</blockquote>
</dd>
    </dl>
  </body>
</html>
