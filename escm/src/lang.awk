# src/lang.awk - Awk version of lang.c
# $Id$
# Author: TAGA Yoshitaka <tagga@tsuda.ac.jp>

BEGIN {
  leading = "";
  key = "";
  data["name"] = "";
  data["command"] = "";
  data["initialization"] = "";
  data["false"] = "";
  data["define"] = "";
  data["string"] = "";
  data["finalization"] = "";
}
$1 == leading {
  key = $2;
  if (! key in data) {
    printf "Unknown key: %s\n", $2;
    exit 1;
  }
}
$1 != leading && key {
  if (data[key]) {
    data[key] = data[key] "\n" $0;
  } else {
    data[key] = $0
  }
}
!leading { # set the leading string
  leading = $1;
  key = "name";
}
END {
  print "/* src/scm.c - generated by src/lang.awk */";
  print "#include \"escm.h\"";
  print "struct escm_lang lang_scm = {";
  sub("^<\\?", "", data["name"]);
  sub(" .*\\?>.*", "", data["name"]);
  if (!data["name"]) {
    print "`name' field is obligatory";
    exit 1;
  }
  print " ", escape_string(data["name"]), ", /* name */";
  if (data["string"] == "" || !match(data["string"], "string")) {
    print "`string' field is obligatory";
    exit 1;
  }
  print " ", escape_string(substr(data["string"], 1, RSTART - 1)), ", /* literal_prefix */";
  print " ", escape_string(substr(data["string"], RSTART + 6)), ", /* literal_suffix */";
  if (data["expression"] == "" || !match(data["expression"], "expression")) {
    print "`expression' field is obligatory";
    exit 1;
  }
  print " ", escape_string(substr(data["expression"], 1, RSTART - 1)), ", /* display_prefix */";
  print " ", escape_string(substr(data["expression"], RSTART + 10)), ", /* display_suffix */";
  if (data["define"] == "" || !match(data["define"], "variable[-_]name")) {
    print "`define' field is obligatory";
    exit 1;
  }
  print " ", escape_string(substr(data["define"], 1, RSTART - 1)), ", /* define_prefix */";
  prev = RSTART;
  if (!match(data["define"], "value")) {
    print "`define' field is obligatory";
    exit 1;
  }  
  print " ", escape_string(substr(data["define"], prev + 13, RSTART - prev - 13)), ", /* define_infix */";
  print " ", escape_string(substr(data["define"], RSTART + 5)), ", /* define_suffix */";
  if (match(data["define"], "variable-name")) {
    print " ", 1, ", /* use_hyphen */";
  } else {
    print " ", 0, ", /* use_hyphen */";
  }
  if (data["false"] == "") {
    print "`false' field is obligatory";
    exit 1;
  }
  print " ", escape_string(data["false"]), ", /* false */"
  print " ", escape_string(data["initialization"]), ", /* init */"
  print " ", escape_string(data["finalization"]), ", /* finish */"
  print "};";
  print "/* end of scm.c */";
}
function escape_string(str) {
  if (str == "") {
    str = "NULL";
  } else {
    gsub("\n", "\\n", str);
    gsub("\\", "\\\\", str);
    gsub("\"", "\\\"", str);
    str = "\"" str "\"";
  }
  return str;
}
