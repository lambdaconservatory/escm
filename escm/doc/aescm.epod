<?scm
  (load (string-append *builddir* "/doc/config.scm"))
  (load (string-append *srcdir* "/doc/helper.scm"))
?>

=head1 NAME

<?scm:d PACKAGE?> -- preprocess embedded Scheme code in documents

=head1 SYNOPSIS

B<<?scm:d PACKAGE?>> I<[OPTION]> ... I<FILE> ...

=head1 DESCRIPTION

B<<?scm:d (string-titlecase PACKAGE)?>> is a filter program
to preprocess embedded Scheme code in documents.
Scheme code between C<E<lt>?scm> and C<?E<gt>> is evaluated
and replaced with what is written to
C<(current-output-port)> while the evaluation.
An expression between C<E<lt>?scm:d> and C<?E<gt>> is evaluated
and replaced with its result.
The sharp-bang line and the meta-argument lines (if any)
of a script are skipped.

The body of B<<?scm:d PACKAGE?>> is a simple converter
from a text to Scheme code,
which will be evaluated by a backend Scheme interpreter.
It works with most implementations.

=head2 OPTIONS

=over 2

=item -E, --no-eval

Preprocess files and convert them into a Scheme program.

=item -e, --eval=EXPR

Evaluate an expression before processing files.
You can use this option upto 16 times.

=item -i, --interp='PROG ARG ...'

Specify the interpreter with its arguments.

=item -l, --language LANG

Specify the interpreter language to be used.
This option is valid
if the tool has been configured with
C<--enable-polyglot> option.

=item -o

Specify the output file.

=item --help

Print a short help message.

=item --version

Print version information.

=back

=head2 SCHEME VARIABLES

Naming convention can be changed by a language configuration file.
For example, C<*escm-input-file*> is used if the identifer record is
B<*lisp*>,
while it is changed to C<EscmInputFile> if the record is B<Title>,
C<ESCM_INPUT_FILE> if B<UPPER>,
and
C<escm_input_file> if B<lower>.
The last one is the default.

=over 2

=item E<42>escm-input-fileE<42>

The name of the file which the tool is currently processing.
The value is false if the input is stdin.

=item E<42>escm-output-fileE<42>

The name of the output file.
It is false if the output is stdout.

=item E<42>escm-interpreterE<42>

The Scheme interpreter and its arguments.

=item E<42>escm-versionE<42>

The name and the version of this project.

=back

=head2 ENVIRONMENT VARIABLES

=over 2

=item ESCM_DEFAULT

The default interpreter language.

=item ESCM_BACKEND

The default backend interpreter.

=back

=head2 OTHER INTERPRETER LANGUAGES

B<<?scm:d (string-titlecase PACKAGE)?>>
is designed to be interpreter independent.
This does not mean Scheme interpreter independent.
You can also embed code of most interpreter languages,
e.g. Awk, Csh, Common Lisp, Perl, Python, Ruby, Sh, Tcl.
But you can use this feature
only when you have run C<configure> script with C<--enable-polyglot> option.

=head1 CAVEATS

=over 2

=item *
B<<?scm:d (string-titlecase PACKAGE)?>>
is developers' version
of B<escm>.
The stable version is still B<escm 1.1>.

=item *
B<<?scm:d (string-titlecase PACKAGE)?>>
may generate a very long string.
Make it sure that your interpreter might not have
buffer overflow bugs.

=item *
A document written in a multibyte character set
may not be correctly processed
by an interpreter which may convert character sets.

=back

=head1 CHANGES

=head2 Syntax

The experimental version has adopted the XML syntax for a preprocessor
as B<eguile> did
and eliminated the archaic one
with C<E<lt>?>, C<E<lt>?=> and C<!E<gt>>.

=head2 File Arguments

As many files as you specified are to be processed.
The stable version processes only the first one.

=head2 CGI

CGI features have been removed since B<aescm> version 0.27.
You can use B<aescm.cgi> in the sharp-bang line of
CGI scripts or as a handler CGI program.

=head1 AUTHOR

  Shiro Kawai  -- the original and stable escm
  TAGA Yoshitaka, tagga@tsuda.ac.jp

=head1 SEE ALSO

B<escm 1.1> (L<http://www.shiro.dreamhost.com/scheme/vault/escm.html>),
B<eguile> (L<http://woozle.org/~neale/src/eguile/>),
B<brl> (L<http://brl.sourceforge.net/>),
B<scsh> (L<http://scsh.sourceforge.net/>),
B<guile>,
B<gosh>,

=begin html
<hr />
<div>
<?scm:d (sourceforge-logo)?>
</div>

=end html

=cut
